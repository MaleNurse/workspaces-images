#!/bin/bash

LOGDIR="${HOME}/logs"
have_ranger=$(type -p ranger)

choose_image() {
  TMP="$(mktemp)"
  ranger --choosefile="${TMP}" "/share/AppImages" 1>&2
  cat ${TMP}
  rm -f ${TMP}
}

selectedApp=
[ "$1" ] && {
  [ -f "$1" ] && {
    file "$1" | grep executable > /dev/null && {
      selectedApp="$1"
    }
  }
}

[ "${selectedApp}" ] || {
  if [ "${have_ranger}" ]; then
    selectedApp="$(choose_image)"
  else
    selectedApp=$(dialog --stdout \
                         --title "Please select an AppImage file" \
                         --fselect /share/AppImages/ 14 48)
  fi
}

[ "${selectedApp}" ] || {
  notify-send "No AppImage selected. Exiting from AppImage Selector."
  exit 1
}

if [ -f "${selectedApp}" ]; then
  logfile=$(basename "${selectedApp}")
  appdir=$(dirname "${selectedApp}")
  printf "\nAppImageLauncher will attempt to install ${selectedApp} ..."
  notify-send "Installing ${selectedApp}"
  [ "${appdir}" == "/share/AppImages" ] && {
    cp "${selectedApp}" "${selectedApp}"$$
  }
  AppImageLauncher "${selectedApp}" > ${LOGDIR}/"${logfile}".log 2>&1
  printf " done\n"
  notify-send "${selectedApp} AppImage installed"
else
  notify-send "ERROR: ${selectedApp} not found or not a plain file"
  exit 1
fi

# Copy newly created desktop files to $HOME/Desktop
for desktop in ${HOME}/.local/share/applications/appimagekit*.desktop
do
  [ "${desktop}" == "${HOME}/.local/share/applications/appimagekit*.desktop" ] && continue
  basetop=$(basename "${desktop}")
  [ -f ${HOME}/Desktop/${basetop} ] || {
    notify-send "Adding AppImage Launcher integration Desktop entry" 2>/dev/null
    cat ${desktop} | sed -e "s/ (1)//" > ${HOME}/Desktop/${basetop}
    chmod 755 ${HOME}/Desktop/${basetop}
  }
done
# Remove newly removed desktop files from $HOME/Desktop
for desktop in ${HOME}/Desktop/appimagekit*.desktop
do
  [ "${desktop}" == "${HOME}/Desktop/appimagekit*.desktop" ] && continue
  basetop=$(basename "${desktop}")
  [ -f ${HOME}/.local/share/applications/${basetop} ] || {
    notify-send "Removing AppImage Launcher integration Desktop entry" 2>/dev/null
    rm -f ${desktop}
  }
done

[ -f "${selectedApp}"$$ ] && mv "${selectedApp}"$$ "${selectedApp}"

notify-send "AppImage Launcher integration of ${selectedApp} complete!" 2>/dev/null
